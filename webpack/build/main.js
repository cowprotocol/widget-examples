(()=>{"use strict";var e={174:(e,t)=>{Object.defineProperty(t,Symbol.toStringTag,{value:"Module"});const n=["connect","disconnect","close","chainChanged","accountsChanged"];class s{constructor(e){this.contentWindow=e,this.ethereumProvider=null,this.requests={},this.processEvent=e=>{"2.0"===e.data.jsonrpc&&(this.ethereumProvider?this.processRequest(e.data):this.requests[e.data.id]=e.data)},window.addEventListener("message",this.processEvent)}disconnect(){this.ethereumProvider=null,window.removeEventListener("message",this.processEvent)}onConnect(e){this.ethereumProvider=e,Object.keys(this.requests).forEach((e=>{this.processRequest(this.requests[e])})),this.requests={},n.forEach((t=>{e.on(t,(e=>{this.postMessage({method:t,params:[e]})}))}))}processRequest(e){this.ethereumProvider&&("enable"===e.method?this.ethereumProvider.enable():this.ethereumProvider.request(e)).then((t=>{this.postMessage({id:e.id,result:t})})).catch((t=>{this.postMessage({id:e.id,error:t})}))}postMessage(e){this.contentWindow.postMessage({jsonrpc:"2.0",...e},"*")}}const o={local:"http://localhost:3000",prod:"https://swap.cow.fi",dev:"https://dev.swap.cow.fi",pr:typeof window>"u"||!window?"":`https://swap-dev-git-${window.location.hostname.replace("widget-configurator-git-","").replace("-cowswap.vercel.app","")}-cowswap.vercel.app`};var a,r=((a=r||{}).SWAP="swap",a.LIMIT="limit",a.ADVANCED="advanced",a);function i(e){const{chainId:t=1,sell:n,buy:s,tradeType:o=r.SWAP}=e,a=[];return n?.asset&&a.push(n.asset),s?.asset&&a.push(s.asset),`/${t}/widget/${o}/${a.map(encodeURIComponent).join("/")}`}function d(e){const{sell:t,buy:n,theme:s}=e,o=new URLSearchParams;return t?.amount&&o.append("sellAmount",t.amount),n?.amount&&o.append("buyAmount",n.amount),s&&o.append("theme","string"==typeof s?s:s.baseTheme),o}const c="cowSwapWidget",p="640px",h="450px";function l(e,t){const n=i(e),s=d(e).toString();t.postMessage({key:c,method:"update",urlParams:{pathname:n,search:s},appParams:{...e,provider:void 0}},"*")}t.COWSWAP_URLS=o,t.TradeType=r,t.cowSwapWidget=function(e,t={}){const{provider:n}=t,a=function(e){const{width:t=h,height:n=p}=e,s=document.createElement("iframe");return s.src=function(e){return o[e.env||"prod"]+"/#"+i(e)+"?"+d(e)}(e),s.width=t,s.height=n,s.style.border="0",s}(t);e.innerHTML="",e.appendChild(a);const{contentWindow:r}=a;if(!r)throw new Error("Iframe does not contain a window!");return function(e,t){window.addEventListener("message",(n=>{n.data.key!==c||"activate"!==n.data.method||e.postMessage({key:c,method:"metaData",metaData:t?{appCode:t}:void 0},"*")}))}(r,t.appCode),function(e,t=p){window.addEventListener("message",(n=>{n.data.key!==c||"iframeHeight"!==n.data.method||(e.style.height=n.data.height?`${n.data.height+20}px`:t)}))}(a,t.height),n&&new s(r).onConnect(n),a.addEventListener("load",(()=>{l(t,r)})),e=>l(e,r)}}},t={};function n(s){var o=t[s];if(void 0!==o)return o.exports;var a=t[s]={exports:{}};return e[s](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var s in t)n.o(t,s)&&!n.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e=n(174);const t=document.createElement("div");let s={appCode:"Widget Examples: Webpack",width:"450px",height:"640px",provider:window.ethereum,chainId:1,tradeType:"swap",sell:{asset:"USDC",amount:"1000"},buy:{asset:"COW"},enabledTradeTypes:["swap","limit","advanced"],theme:"dark",interfaceFeeBips:"50"};const o=document.createElement("button");o.innerText="ðŸ”„ Invert token selection",o.addEventListener("click",(()=>{s={...s,sell:s.buy,buy:s.sell},console.log("switching tokens",s),d(s)}));const a=document.createElement("h1");a.innerText="CoW Widget - Webpack example";const r=document.createElement("header"),i=document.createElement("main");r.style="text-align: center;",a.style="color: #fff; margin: 30px 30px 0 30px",o.style="padding: 10px; border-radius: 15px; margin: 30px 15px; ",i.style="display:flex; flex-direction: column; lign-items: center; margin-top: 0; align-items: center;",document.body.style="height: 100vh; display: flex; justify-content: center; background-color: #06172e; margin: 0;",r.appendChild(a),r.appendChild(o),i.appendChild(r),i.appendChild(t),document.body.appendChild(i);const d=(0,e.cowSwapWidget)(t,s)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,